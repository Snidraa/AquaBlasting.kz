$(window).on('load', function () {
	$('body').toggleClass('lock');
	var $preloader = $('preloader');
	$preloader.delay(500).fadeOut('slow');
	setTimeout(function () {
		$('.preloader__card').addClass('card');
	}, 510);
	setTimeout(function () {
		document.getElementById('preloader').style.display = 'none';
		document.body.classList.add('loaded');
		$('body').removeClass('lock');
	}, 4000);
	$('.slider').slick({
		dots: true,
		slidesToShow: 3,
		speed: 1000,
		easing: 'ease-out',
		initialSlide: 2,
		centerMode: true,
		variableWidth: true,
		waitForAnimate: false,
		autoplay: true,
		autoplaySpeed: 1500,
		pauseOnFocus: true,
		pauseOnHover: true,
		pauseOnDotsHover: true,
		responsive: [
			{
				breakpoint: 700,
				settings: {
					arrows: false
				}
			}
		]
	});
	$('.slider').slick('setPosition');
});

$('.preloader').click(function (event) {
	document.getElementById('preloader').style.display = 'none';
	$('body').removeClass('lock');
	$('.preloader__card').removeClass('card');
});

$('.icon-menu').click(function (event) {
	$(this).toggleClass('active');
	$('.menu__body').toggleClass('active');
	$('body').toggleClass('lock');
});

$('.menu__link').click(function (event) {
	$('.icon-menu').removeClass('active')
	$('.menu__body').removeClass('active');
	$('body').removeClass('lock');
});

$('.header__logo').click(function (event) {
	$('.icon-menu').removeClass('active')
	$('.menu__body').removeClass('active');
	$('body').removeClass('lock');
});

function ibg() {
	$.each($('.ibg'), function (index, val) {
		if ($(this).find('img').length > 0) {
			$(this).css('background-image', 'url("' + $(this).find('img').attr('src') + '")');
		}
	});

}

ibg();

!function (document, window) { var juxtapose = { sliders: [], OPTIMIZATION_ACCEPTED: 1, OPTIMIZATION_WAS_CONSTRAINED: 2 }; function Graphic(properties, slider) { var self = this; this.image = new Image, this.loaded = !1, this.image.onload = function () { self.loaded = !0, slider._onLoaded() }, this.image.src = properties.src, this.label = properties.label || !1, this.credit = properties.credit || !1 } function getNaturalDimensions(DOMelement) { if (DOMelement.naturalWidth && DOMelement.naturalHeight) return { width: DOMelement.naturalWidth, height: DOMelement.naturalHeight }; var img = new Image; return img.src = DOMelement.src, { width: img.width, height: img.height } } function getImageDimensions(img) { var dimensions; return { width: getNaturalDimensions(img).width, height: getNaturalDimensions(img).height, aspect: function () { return this.width / this.height } } } function addClass(element, c) { null !== element && (element.classList ? element.classList.add(c) : element.className += " " + c) } function removeClass(element, c) { element.className = element.className.replace(/(\S+)\s*/g, (function (w, match) { return match === c ? "" : w })).replace(/^\s+/, "") } function setText(element, text) { document.body.textContent ? element.textContent = text : element.innerText = text } function getComputedWidthAndHeight(element) { return window.getComputedStyle ? { width: parseInt(getComputedStyle(element).width, 10), height: parseInt(getComputedStyle(element).height, 10) } : (w = element.getBoundingClientRect().right - element.getBoundingClientRect().left, h = element.getBoundingClientRect().bottom - element.getBoundingClientRect().top, { width: parseInt(w, 10) || 0, height: parseInt(h, 10) || 0 }) } function getPageX(e) { var pageX; return pageX = e.pageX ? e.pageX : e.touches ? e.touches[0].pageX : e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft } function getPageY(e) { var pageY; return pageY = e.pageY ? e.pageY : e.touches ? e.touches[0].pageY : e.clientY + document.body.scrollTop + document.documentElement.scrollTop } function getLeftPercent(slider, input) { if ("string" == typeof input || "number" == typeof input) leftPercent = parseInt(input, 10); else { var sliderRect = slider.getBoundingClientRect(), offset = { top: sliderRect.top + document.body.scrollTop, left: sliderRect.left + document.body.scrollLeft }, width = slider.offsetWidth, pageX = getPageX(input), relativeX; leftPercent = (pageX - offset.left) / width * 100 } return leftPercent } function getTopPercent(slider, input) { if ("string" == typeof input || "number" == typeof input) topPercent = parseInt(input, 10); else { var sliderRect = slider.getBoundingClientRect(), offset = { top: sliderRect.top + document.body.scrollTop, left: sliderRect.left + document.body.scrollLeft }, width = slider.offsetHeight, pageY = getPageY(input), relativeY; topPercent = (pageY - offset.top) / width * 100 } return topPercent } var BOOLEAN_OPTIONS = { animate: !0, showLabels: !0, showCredits: !0, makeResponsive: !0 }; function interpret_boolean(x) { return "string" != typeof x ? Boolean(x) : !("false" === x || "" === x) } function JXSlider(selector, images, options) { var i; for (i in this.selector = selector, this.options = { animate: !0, showLabels: !0, showCredits: !0, makeResponsive: !0, startingPosition: "50%", mode: "horizontal", callback: null }, this.options) i in options && (this.options[i] = i in BOOLEAN_OPTIONS ? interpret_boolean(options[i]) : options[i]); 2 == images.length ? (this.imgBefore = new Graphic(images[0], this), this.imgAfter = new Graphic(images[1], this)) : console.warn("The images parameter takes two Image objects."), this.imgBefore.credit || this.imgAfter.credit ? this.options.showCredits = !0 : this.options.showCredits = !1 } JXSlider.prototype = { updateSlider: function (input, animate) { var leftPercent, rightPercent; leftPercent = (leftPercent = "vertical" === this.options.mode ? getTopPercent(this.slider, input) : getLeftPercent(this.slider, input)).toFixed(2) + "%", leftPercentNum = parseFloat(leftPercent), rightPercent = 100 - leftPercentNum + "%", leftPercentNum > 0 && leftPercentNum < 100 && (removeClass(this.handle, "transition"), removeClass(this.rightImage, "transition"), removeClass(this.leftImage, "transition"), this.options.animate && animate && (addClass(this.handle, "transition"), addClass(this.leftImage, "transition"), addClass(this.rightImage, "transition")), "vertical" === this.options.mode ? (this.handle.style.top = leftPercent, this.leftImage.style.height = leftPercent, this.rightImage.style.height = rightPercent) : (this.handle.style.left = leftPercent, this.leftImage.style.width = leftPercent, this.rightImage.style.width = rightPercent), this.sliderPosition = leftPercent) }, getPosition: function () { return this.sliderPosition }, displayLabel: function (element, labelText) { label = document.createElement("div"), label.className = "jx-label", label.setAttribute("tabindex", 0), setText(label, labelText), element.appendChild(label) }, displayCredits: function () { credit = document.createElement("div"), credit.className = "jx-credit", text = "<em>Photo Credits:</em>", this.imgBefore.credit && (text += " <em>Before</em> " + this.imgBefore.credit), this.imgAfter.credit && (text += " <em>After</em> " + this.imgAfter.credit), credit.innerHTML = text, this.wrapper.appendChild(credit) }, setStartingPosition: function (s) { this.options.startingPosition = s }, checkImages: function () { return getImageDimensions(this.imgBefore.image).aspect() == getImageDimensions(this.imgAfter.image).aspect() }, calculateDims: function (width, height) { var ratio = getImageDimensions(this.imgBefore.image).aspect(); return width ? height = width / ratio : height && (width = height * ratio), { width: width, height: height, ratio: ratio } }, responsivizeIframe: function (dims) { return dims.height < window.innerHeight ? dims.ratio >= 1 && (this.wrapper.style.paddingTop = parseInt((window.innerHeight - dims.height) / 2) + "px") : dims.height > window.innerHeight && (dims = this.calculateDims(0, window.innerHeight), this.wrapper.style.paddingLeft = parseInt((window.innerWidth - dims.width) / 2) + "px"), this.options.showCredits && (dims.height -= 13), dims }, setWrapperDimensions: function () { var wrapperWidth = getComputedWidthAndHeight(this.wrapper).width, wrapperHeight = getComputedWidthAndHeight(this.wrapper).height, dims = this.calculateDims(wrapperWidth, wrapperHeight); window.location === window.parent.location || this.options.makeResponsive || (dims = this.responsivizeIframe(dims)), this.wrapper.style.height = parseInt(dims.height) + "px", this.wrapper.style.width = parseInt(dims.width) + "px" }, optimizeWrapper: function (maxWidth) { var result = juxtapose.OPTIMIZATION_ACCEPTED; return this.imgBefore.image.naturalWidth >= maxWidth && this.imgAfter.image.naturalWidth >= maxWidth ? (this.wrapper.style.width = maxWidth + "px", result = juxtapose.OPTIMIZATION_WAS_CONSTRAINED) : this.imgAfter.image.naturalWidth < maxWidth ? this.wrapper.style.width = this.imgAfter.image.naturalWidth + "px" : this.wrapper.style.width = this.imgBefore.image.naturalWidth + "px", this.setWrapperDimensions(), result }, _onLoaded: function () { if (this.imgBefore && !0 === this.imgBefore.loaded && this.imgAfter && !0 === this.imgAfter.loaded) { if (this.wrapper = document.querySelector(this.selector), null === this.wrapper) return; addClass(this.wrapper, "juxtapose"), this.wrapper.style.width = getNaturalDimensions(this.imgBefore.image).width, this.setWrapperDimensions(), this.slider = document.createElement("div"), this.slider.className = "jx-slider", this.wrapper.appendChild(this.slider), "horizontal" != this.options.mode && addClass(this.slider, this.options.mode), this.handle = document.createElement("div"), this.handle.className = "jx-handle", this.rightImage = document.createElement("div"), this.rightImage.className = "jx-image jx-right", this.rightImage.appendChild(this.imgAfter.image), this.leftImage = document.createElement("div"), this.leftImage.className = "jx-image jx-left", this.leftImage.appendChild(this.imgBefore.image), this.slider.appendChild(this.handle), this.slider.appendChild(this.leftImage), this.slider.appendChild(this.rightImage), this.leftArrow = document.createElement("div"), this.rightArrow = document.createElement("div"), this.control = document.createElement("div"), this.controller = document.createElement("div"), this.leftArrow.className = "jx-arrow jx-left", this.rightArrow.className = "jx-arrow jx-right", this.control.className = "jx-control", this.controller.className = "jx-controller", this.controller.setAttribute("tabindex", 0), this.controller.setAttribute("role", "slider"), this.controller.setAttribute("aria-valuenow", 50), this.controller.setAttribute("aria-valuemin", 0), this.controller.setAttribute("aria-valuemax", 100), this.handle.appendChild(this.leftArrow), this.handle.appendChild(this.control), this.handle.appendChild(this.rightArrow), this.control.appendChild(this.controller), this._init() } }, _init: function () { !1 === this.checkImages() && console.warn(this, "Check that the two images have the same aspect ratio for the slider to work correctly."), this.updateSlider(this.options.startingPosition, !1), !0 === this.options.showLabels && (this.imgBefore.label && this.displayLabel(this.leftImage, this.imgBefore.label), this.imgAfter.label && this.displayLabel(this.rightImage, this.imgAfter.label)), !0 === this.options.showCredits && this.displayCredits(); var self = this; window.addEventListener("resize", (function () { self.setWrapperDimensions() })), this.slider.addEventListener("mousedown", (function (e) { (e = e || window.event).preventDefault(), self.updateSlider(e, !0), animate = !0, this.addEventListener("mousemove", (function (e) { (e = e || window.event).preventDefault(), animate && self.updateSlider(e, !1) })), this.addEventListener("mouseup", (function (e) { (e = e || window.event).preventDefault(), e.stopPropagation(), this.removeEventListener("mouseup", arguments.callee), animate = !1 })) })), this.slider.addEventListener("touchstart", (function (e) { (e = e || window.event).preventDefault(), e.stopPropagation(), self.updateSlider(e, !0), this.addEventListener("touchmove", (function (e) { (e = e || window.event).preventDefault(), e.stopPropagation(), self.updateSlider(event, !1) })) })), this.handle.addEventListener("keydown", (function (e) { var key = (e = e || window.event).which || e.keyCode, ariaValue = parseFloat(this.style.left); if (37 == key) { ariaValue -= 1; var leftStart = parseFloat(this.style.left) - 1; self.updateSlider(leftStart, !1), self.controller.setAttribute("aria-valuenow", ariaValue) } if (39 == key) { ariaValue += 1; var rightStart = parseFloat(this.style.left) + 1; self.updateSlider(rightStart, !1), self.controller.setAttribute("aria-valuenow", ariaValue) } })), this.leftImage.addEventListener("keydown", (function (event) { var key = event.which || event.keyCode; 13 != key && 32 != key || (self.updateSlider("90%", !0), self.controller.setAttribute("aria-valuenow", 90)) })), this.rightImage.addEventListener("keydown", (function (event) { var key = event.which || event.keyCode; 13 != key && 32 != key || (self.updateSlider("10%", !0), self.controller.setAttribute("aria-valuenow", 10)) })), juxtapose.sliders.push(this), this.options.callback && "function" == typeof this.options.callback && this.options.callback(this) } }, juxtapose.makeSlider = function (element, idx) { void 0 === idx && (idx = juxtapose.sliders.length); var w = element, images = w.querySelectorAll("img"), options = {}; w.getAttribute("data-animate") && (options.animate = w.getAttribute("data-animate")), w.getAttribute("data-showlabels") && (options.showLabels = w.getAttribute("data-showlabels")), w.getAttribute("data-showcredits") && (options.showCredits = w.getAttribute("data-showcredits")), w.getAttribute("data-startingposition") && (options.startingPosition = w.getAttribute("data-startingposition")), w.getAttribute("data-mode") && (options.mode = w.getAttribute("data-mode")), w.getAttribute("data-makeresponsive") && (options.mode = w.getAttribute("data-makeresponsive")), specificClass = "juxtapose-" + idx, addClass(element, specificClass), selector = "." + specificClass, w.innerHTML ? w.innerHTML = "" : w.innerText = "", slider = new juxtapose.JXSlider(selector, [{ src: images[0].src, label: images[0].getAttribute("data-label"), credit: images[0].getAttribute("data-credit") }, { src: images[1].src, label: images[1].getAttribute("data-label"), credit: images[1].getAttribute("data-credit") }], options) }, juxtapose.scanPage = function () { for (var elements = document.querySelectorAll(".juxtapose"), i = 0; i < elements.length; i++)juxtapose.makeSlider(elements[i], i) }, juxtapose.JXSlider = JXSlider, window.juxtapose = juxtapose, juxtapose.scanPage() }(document, window), function (win, doc) { function docHijack(p) { var old = doc[p]; doc[p] = function (v) { return addListen(old(v)) } } function addEvent(on, fn, self) { return (self = this).attachEvent("on" + on, (function (e) { var e; (e = e || win.event).preventDefault = e.preventDefault || function () { e.returnValue = !1 }, e.stopPropagation = e.stopPropagation || function () { e.cancelBubble = !0 }, fn.call(self, e) })) } function addListen(obj, i) { if (i = obj.length) for (; i--;)obj[i].addEventListener = addEvent; else obj.addEventListener = addEvent; return obj } win.addEventListener || (addListen([doc, win]), "Element" in win ? win.Element.prototype.addEventListener = addEvent : (doc.attachEvent("onreadystatechange", (function () { addListen(doc.all) })), docHijack("getElementsByTagName"), docHijack("getElementById"), docHijack("createElement"), addListen(doc.all))) }(window, document);

(function (e, t) { var r = document.getElementById(e); r.contentWindow.document.open(), r.contentWindow.document.write(atob(t)), r.contentWindow.document.close() })("map_681914537", "PGJvZHk+PHN0eWxlPgogICAgICAgIGh0bWwsIGJvZHkgewogICAgICAgICAgICBtYXJnaW46IDA7CiAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgfQogICAgICAgIGh0bWwsIGJvZHksICNtYXAgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgIH0KICAgICAgICAuYnVsbGV0LW1hcmtlciB7CiAgICAgICAgICAgIHdpZHRoOiAyMHB4OwogICAgICAgICAgICBoZWlnaHQ6IDIwcHg7CiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTsKICAgICAgICAgICAgYm9yZGVyOiA0cHggc29saWQgIzAyODFmMjsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgIH0KICAgICAgICAucGVybWFuZW50LXRvb2x0aXAgewogICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgICAgICAgICBib3gtc2hhZG93OiBub25lOwogICAgICAgICAgICBib3JkZXI6IG5vbmU7CiAgICAgICAgICAgIHBhZGRpbmc6IDZweCAxMnB4OwogICAgICAgICAgICBjb2xvcjogIzI2MjYyNjsKICAgICAgICB9CiAgICAgICAgLnBlcm1hbmVudC10b29sdGlwOmJlZm9yZSB7CiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgICAgfQogICAgICAgIC5kZy1wb3B1cF9oaWRkZW5fdHJ1ZSB7CiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgIH0KICAgICAgICAubGVhZmxldC1jb250YWluZXIgLmxlYWZsZXQtcG9wdXAgLmxlYWZsZXQtcG9wdXAtY2xvc2UtYnV0dG9uIHsKICAgICAgICAgICAgdG9wOiAwOwogICAgICAgICAgICByaWdodDogMDsKICAgICAgICAgICAgd2lkdGg6IDIwcHg7CiAgICAgICAgICAgIGhlaWdodDogMjBweDsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgICAgICBsaW5lLWhlaWdodDogMTsKICAgICAgICB9CiAgICA8L3N0eWxlPjxkaXYgaWQ9Im1hcCI+PC9kaXY+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly9tYXBzLmFwaS4yZ2lzLnJ1LzIuMC9sb2FkZXIuanM/cGtnPWZ1bGwmYW1wO3NraW49bGlnaHQiPjwvc2NyaXB0PjxzY3JpcHQ+KGZ1bmN0aW9uKGUpe3ZhciB0PUpTT04ucGFyc2UoZSkscj10Lm9yZGVyZWRHZW9tZXRyaWVzLG49dC5tYXBQb3NpdGlvbixhPXQuaXNXaGVlbFpvb21FbmFibGVkO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChhdG9iKGUpLnNwbGl0KCIiKS5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIiUiKygiMDAiK2UuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC0yKX0pLmpvaW4oIiIpKX1ERy50aGVuKGZ1bmN0aW9uKCl7dmFyIGU9REcubWFwKCJtYXAiLHtjZW50ZXI6W24ubGF0LG4ubG9uXSx6b29tOm4uem9vbSxzY3JvbGxXaGVlbFpvb206YSx6b29tQ29udHJvbDohYX0pO0RHLmdlb0pTT04ocix7c3R5bGU6ZnVuY3Rpb24oZSl7dmFyIHQscixuLGEsbztyZXR1cm57ZmlsbENvbG9yOm51bGw9PT0odD1lKXx8dm9pZCAwPT09dD92b2lkIDA6dC5wcm9wZXJ0aWVzLmZpbGxDb2xvcixmaWxsT3BhY2l0eTpudWxsPT09KHI9ZSl8fHZvaWQgMD09PXI/dm9pZCAwOnIucHJvcGVydGllcy5maWxsT3BhY2l0eSxjb2xvcjpudWxsPT09KG49ZSl8fHZvaWQgMD09PW4/dm9pZCAwOm4ucHJvcGVydGllcy5zdHJva2VDb2xvcix3ZWlnaHQ6bnVsbD09PShhPWUpfHx2b2lkIDA9PT1hP3ZvaWQgMDphLnByb3BlcnRpZXMuc3Ryb2tlV2lkdGgsb3BhY2l0eTpudWxsPT09KG89ZSl8fHZvaWQgMD09PW8/dm9pZCAwOm8ucHJvcGVydGllcy5zdHJva2VPcGFjaXR5fX0scG9pbnRUb0xheWVyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuInJhZGl1cyJpbiBlLnByb3BlcnRpZXM/REcuY2lyY2xlKHQsZS5wcm9wZXJ0aWVzLnJhZGl1cyk6REcubWFya2VyKHQse2ljb246ZnVuY3Rpb24oZSl7cmV0dXJuIERHLmRpdkljb24oe2h0bWw6IjxkaXYgY2xhc3M9J2J1bGxldC1tYXJrZXInIHN0eWxlPSdib3JkZXItY29sb3I6ICIrZSsiOyc+PC9kaXY+IixjbGFzc05hbWU6Im92ZXJyaWRlLWRlZmF1bHQiLGljb25TaXplOlsyMCwyMF0saWNvbkFuY2hvcjpbMTAsMTBdfSl9KGUucHJvcGVydGllcy5jb2xvcil9KX0sb25FYWNoRmVhdHVyZTpmdW5jdGlvbihlLHQpe2UucHJvcGVydGllcy5kZXNjcmlwdGlvbiYmdC5iaW5kUG9wdXAobyhlLnByb3BlcnRpZXMuZGVzY3JpcHRpb24pLHtjbG9zZUJ1dHRvbjohMCxjbG9zZU9uRXNjYXBlS2V5OiEwfSksZS5wcm9wZXJ0aWVzLnRpdGxlJiZ0LmJpbmRUb29sdGlwKG8oZS5wcm9wZXJ0aWVzLnRpdGxlKSx7cGVybWFuZW50OiEwLG9wYWNpdHk6MSxjbGFzc05hbWU6InBlcm1hbmVudC10b29sdGlwIn0pfX0pLmFkZFRvKGUpfSl9KSgneyJvcmRlcmVkR2VvbWV0cmllcyI6W3sidHlwZSI6IkZlYXR1cmUiLCJwcm9wZXJ0aWVzIjp7ImNvbG9yIjoiIzAyODFmMiIsInRpdGxlIjoiUVhGMVlTQkNiR0Z6ZEdsdVp3PT0iLCJkZXNjcmlwdGlvbiI6IiIsInpJbmRleCI6MTAwMDAwMDAwMH0sImdlb21ldHJ5Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNzEuNDU3OTksNTEuMTgxODQ2XX0sImlkIjo3Nzd9XSwibWFwUG9zaXRpb24iOnsibGF0Ijo1MS4xODE5MDIwNTM3MzExNiwibG9uIjo3MS40NTc5OTYzNjg0MDgyMiwiem9vbSI6MTh9LCJpc1doZWVsWm9vbUVuYWJsZWQiOnRydWV9Jyk8L3NjcmlwdD48c2NyaXB0IGFzeW5jPSIiIHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPVVBLTE1ODg2NjE2OC0xIj48L3NjcmlwdD48c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+KGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoKXtkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpfXdpbmRvdy5kYXRhTGF5ZXI9d2luZG93LmRhdGFMYXllcnx8W10sdCgianMiLG5ldyBEYXRlKSx0KCJjb25maWciLGUpLHdpbmRvdy5ndGFnPXR9KSgnVUEtMTU4ODY2MTY4LTEnKTwvc2NyaXB0PjwvYm9keT4=")